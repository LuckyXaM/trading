// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TrDeals.Data;

namespace TrDeals.Migrations
{
    [DbContext(typeof(TrDealsContext))]
    partial class TrDealsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("TrDeals.Data.Models.Ask", b =>
                {
                    b.Property<Guid>("AskId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Ammount");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CurrencyTypeId")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("AskId");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("Asks");
                });

            modelBuilder.Entity("TrDeals.Data.Models.Bid", b =>
                {
                    b.Property<Guid>("AskId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Ammount");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CurrencyTypeId")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("AskId");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("TrModels.CurrencyType", b =>
                {
                    b.Property<string>("TransactionTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("TransactionTypeId");

                    b.ToTable("CurrencyTypes");
                });

            modelBuilder.Entity("TrDeals.Data.Models.Ask", b =>
                {
                    b.HasOne("TrModels.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrDeals.Data.Models.Bid", b =>
                {
                    b.HasOne("TrModels.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
