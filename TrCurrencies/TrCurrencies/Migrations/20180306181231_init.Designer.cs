// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TrCurrencies.Data;

namespace TrCurrencies.Migrations
{
    [DbContext(typeof(TrCurrenciesContext))]
    [Migration("20180306181231_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("TrModels.Currency", b =>
                {
                    b.Property<string>("CurrencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("TrModels.CurrencyPair", b =>
                {
                    b.Property<Guid>("CurrencyPairId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrencyPairFromId")
                        .IsRequired();

                    b.Property<string>("CurrencyPairToId")
                        .IsRequired();

                    b.HasKey("CurrencyPairId");

                    b.HasIndex("CurrencyPairFromId");

                    b.HasIndex("CurrencyPairToId");

                    b.ToTable("CurrencyPairs");
                });

            modelBuilder.Entity("TrModels.CurrencyPair", b =>
                {
                    b.HasOne("TrModels.Currency", "CurrencyPairFrom")
                        .WithMany()
                        .HasForeignKey("CurrencyPairFromId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrModels.Currency", "CurrencyPairTo")
                        .WithMany()
                        .HasForeignKey("CurrencyPairToId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
